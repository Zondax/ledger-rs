name: "Main workflow"
on:
  - push

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"

  lint:
    runs-on: ubuntu-latest
    container:
      image: zondax/rust-ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get install -y libudev-dev libusb-1.0-0-dev protobuf-compiler
      - name: show versions
        run: |
          rustup show

      - name: rustfmt
        run: |
          cargo fmt --version
          cargo fmt -- --check

      - name: rust cache
        uses: Swatinem/rust-cache@v1
        with:
          # setup sharedKey to share cache with other jobs
          sharedKey: ${{ github.run_id }}-${{ github.run_attempt }}

      - name: clippy
        run: |
          cargo clippy --version
          cargo clippy --all-features

  build-wasm:
    runs-on: ubuntu-latest
    needs: lint
    container:
      image: zondax/rust-ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get install -y libudev-dev libusb-1.0-0-dev protobuf-compiler
      - name: show versions
        run: |
          rustup show

      - name: Install rust wasm target
        run: rustup target install wasm32-unknown-unknown

      - name: rust cache
        uses: Swatinem/rust-cache@v1
        with:
          # setup sharedKey to share cache with other jobs
          sharedKey: ${{ github.run_id }}-${{ github.run_attempt }}

      - name: build ledger-transport
        working-directory: ledger-transport
        run: cargo build --target=wasm32-unknown-unknown

      - name: build ledger-zondax-generic
        working-directory: ledger-zondax-generic
        run: cargo build --target=wasm32-unknown-unknown

  build:
    runs-on: ubuntu-latest
    needs: lint
    container:
      image: zondax/rust-ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get install -y libudev-dev libusb-1.0-0-dev protobuf-compiler
      - name: show versions
        run: |
          rustup show

      - name: rust cache
        uses: Swatinem/rust-cache@v1
        with:
          # setup sharedKey to share cache with other jobs
          sharedKey: ${{ github.run_id }}-${{ github.run_attempt }}

      - name: build
        run: cargo build

      - name: build --release
        run: cargo build --release

  tests:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: zondax/rust-ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get install -y libudev-dev libusb-1.0-0-dev protobuf-compiler

      - name: rust cache
        uses: Swatinem/rust-cache@v1
        with:
          # setup sharedKey to share cache with other jobs
          sharedKey: ${{ github.run_id }}-${{ github.run_attempt }}

      - name: test --all-features
        run: |
          cargo test --all --all-features -- --test-threads 1 --skip integration

  test_wasm_ledger:
    runs-on: ubuntu-latest
    needs: build-wasm
    defaults:
      run:
        working-directory: tests
    container:
      image: zondax/rust-ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get install -y libudev-dev libusb-1.0-0-dev protobuf-compiler

      - name: Install nvm, node, yarn
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          nvm install 14

      - name: rust cache
        uses: Swatinem/rust-cache@v1
        with:
          # setup sharedKey to share cache with other jobs
          sharedKey: ${{ github.run_id }}-${{ github.run_attempt }}

      - name: cargo-install
        uses: baptiste0928/cargo-install@v1.2.0
        with:
          crate: wasm-pack

      - name: build wasm
        run: make test

      - name: test wasm (using Zemu demo app)
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          nvm use 14
          npm install
          npm run test
